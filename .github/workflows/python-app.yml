# EVE Means of Profit - CI/CD Pipeline
# Modern Python tooling: uv + Ruff (linting + formatting) + ty (type checking)

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # For badge updates
  pull-requests: read

jobs:
  ruff:
    name: Ruff (Lint + Format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Set up Python 3.13
        run: uv python install 3.13
      
      - name: Install dependencies
        run: uv sync --all-groups
      
      - name: Run Ruff linter
        run: uv run ruff check . --output-format=github
        continue-on-error: true
      
      - name: Run Ruff formatter check
        run: uv run ruff format --check .
        continue-on-error: true

  type-check:
    name: Type Check (ty)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Set up Python 3.13
        run: uv python install 3.13
      
      - name: Install dependencies
        run: uv sync --all-groups
      
      - name: Run ty type checker
        run: uv run ty check src/
        continue-on-error: true

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Set up Python 3.13
        run: uv python install 3.13
      
      - name: Install dependencies
        run: uv sync --all-groups
      
      - name: Run tests with coverage
        run: uv run pytest --cov=src --cov-report=term-missing --cov-report=xml --cov-report=html #--cov-fail-under=60
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      # - name: Archive coverage report
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: coverage-report
      #     path: htmlcov/
